<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBoxSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAFBlJREFUeF7t
        nX2MHMWZh1fWyUJRZCEEQtEJYcTuTlfNSgfnKOEvAkKgyJHB8rE5OY7EstNVg0xsAY5MsOyjp6vHcMYY
        5CzE5sAyGAFnxQ4c4HAJIibh+8jZ5OuvJARxyXESxjannD/Wu3N6Z9fCvN273t3pnu6q/j3SI0UEtqq7
        31/PTHd99PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIJi6qLP1Cpfb9blt8lQi7Wk0dUNTS22kPS/
        T//z0/+eGe69jv5b/vcAAAUgGFp4blOLb1B4ja4+bXz5tlHeh5GWR42WJyIlxyItW6mo5Fj7b9LfVt6H
        TSXfardJbfv9i6kvvH8AgJQIa/LySAljtNw/GfLjsZDmL91wDkVKHoi03N7wKzcEg3I+PxYAwDSsv6n3
        UqNlYLR43ShxJCFoVmmUPNw+Fjomv3IJP14ASk1Tiy+Fvrwn0vK3Bf1kT1lxPFLiN8avRuv8gQv5+QDA
        eYw/sCxU3guRlp/EA1I6Dxnfe55+MvDzBIAzUIHTb/ho4mEaDwGccLT9DKEuVvLzB4B10BPySMtXJ5+g
        82KH03s89L2f0etIfl4BKCyrVvQuoHfr7Sfi8aKGc/OvRstdG2/uvYCfbwAKQVCv3GiUeC/ScjyhgGE6
        jhvlHaRnKPz8A5AL9HvVKPFRQrHCbD1KYyOCnp55/JoAkCnBoPwiDXZpv9KKFybsricjVd0bDFbP49cJ
        gFShIjPKey7SIr1htjAtx9o3AgxLBmlDn/j0EMoocSqh8GCBNHQjqMl9uBGAjgmGFp5jtHii/X46odhg
        oR01vthJ15BfVwDOSljzvhtpeSyhsKBF0hgM43t38+sLQCINv+/ayRl3sWKCVnuoUfeW8OsNQJuJSTne
        uwmFAx2S1k3AJCTwOegrIn7nl0d6mEszMHkdgJJBc+8jLX/HCwSWQ/qpFwz1e7wuQAloKrnNKIFhu3DM
        aDHC6wM4SrRy4KJIy/cTCgGWWPo2QN8Ieb0AhzBa3B7pKgbzwCmsngr9ympeN8ByJgb0tBfjSLjoEDKV
        PECjP3kdAQsJfW+R0fLT2EWGcHqP0mrMvJ6ARRhf3Dq5XDW/uBCe3Yn9ENbwugIWQJN3YhcUwrlYk/t4
        fYGCQrPAjBZ/il1ECDvzfVrujdcbKBCTA3us30wDFtNQif/FwKGC0hiuXI0lt2EXPEmbrfL6AznSrAk/
        1c0wIZzecXrAzOsQ5AAtDJlwgSDMXNrvkNcj6CKhX32AXxQIuyntAcHrEnSBqF59iF8MCPPQ+HIHr0+Q
        IUZ5T/GLAGGuqupeXqcgA4wS/xo7+RAWQvEMr1eQIhObcfCTDmFxDJV4nNctSAGjxSZ+siEsok3lbeX1
        CzogUmI9P8kQFtlQyQavYzAHaPNNfnIhtEGjPMXrGcyCUHlfwwg/aKu05iTtM8HrGswAUxd9GNsPHfAk
        JhDNEprS297/PX4yIbRPJY9is9JZgPn80DmV+COvc5CAUd5zsZMHoQOG2tvD6x2cQajkLfykQeiSRnmr
        eN2D9u/+vsuwgCd0XzFGK1Xz+i81tAY7LbcUP1kQOunRQC/6As9BaWkq+VbCSYLQWY0vX+M5KCWTa/fH
        ThCErktb1fE8lIqoJi6OtBzlJwbCclg9VeoNSY2WH8RPCoTlkXYl5rkoBU0lt/GTAWEZNVqM8Hw4TaC8
        fkzygXBCmjQU3FyVPCfOgq/+EMb8A8+Jkxhd3ZBw8BCWXucXEWlq8SV68skPHELYdnSdP3Ahz40zhL73
        bsJBQwgnpUFxPDdO0Kz1X8MPFkIY1wz3XsfzYz1Gy//hBwohTFCJv/D8WE1Y874bO0gI4ZQ2lXcXz5GV
        BEMLz4m0PMYPEEI4rccpOzxP1mG0eCLh4CCEZ9H6TUdpnj8m+0A4Z0cpQzxX1hApsTvhoOCMrba+f+eV
        rcfvWdZ66v5vtZ7c9M3Wo8Hi1n2rv5zw70IXNbr6NM+VFQSD1fOMEhj0Mwc3rV7U2vuw33pn3+bWr155
        ONH9u/+ptSO6IfbfQtesnrJySXGs7js3n7j3H1r/+e8PxgI/lft3b2htueOK2N+BDqmqe3m+Cs2qFb0L
        sMDn7KVPfR7wmfjuj7e0Rr53VezvQTekb9KUKZ6zwmJ8sZMfBJzeZ7fdEgv2bKSbAL4JuKvxxaM8Z4Uk
        6OmZR+8w+QHAqe00/KelnwP8b0NnPEbZ4nkrHEbLIKHzcAqf3VaPBbkTd5jrY21AN6Sp9DxvhcNo+Qnv
        OEw2rU/+M8W3AKc9xPNWKIJ65caETsMEswj/aTFOwF2NP7CM564wGCV+xTsM42YZfvKRYHGsTeiGRnkH
        ee4KAQ38ibQc5x2Gnzft3/xJ0ohB3i50xvE1y/vP5/nLnUjL7QmdhWeY9Sf/aZ/avDzWNnTHUMkf8Pzl
        TqTkUd5R+JndCj+5s7k01j50R6PkYZ6/XDF+/2LeSfiZ3Qw/uXXtlbE+QLcs1LJhkZav8g7CCbsd/nde
        2NSeRcj7Ad0y1PIVnsPcMFqe4B2E3Q8/uWdkONYP6KLiOM9hLkQ1ORjvHMwj/L986YHWpu/8fawv0E1N
        TSzleew6RovXecfKbh7hJ3duXBbrC3RXoyo/53nsOpEWJ3nHymxe4d/7kB/rC3TeEzyPXYWGJSZ0qrTm
        FX5ql/cFlsNG3VvCc9k1Ql++yDtUVrsxwi/Jf3tkZawvsDzSyls8l10jwsy/tgg/zE/xMc9lV6BdTOOd
        KZ8IP8zbXHYUDn15D+9I2UT4YREMlWzwfGZOpOVveUfKJB74waJotPdrns/MMb4o7bp/+OSHBfMYz2em
        GL9ySUInSmFen/wIP5zO9Tf1Xspzmhn0m4N3oAwi/LCodnXBUKPlG7wDrovwwyJrfPkaz2lmRFoe4R1w
        WYQfFt3Qr3RnkZBgUM7njbtsXuHH0344G40SLcomz2vqNLX4Bm/cVfMKPz754VzsyipBjbp4kDfsogg/
        tM2GLzfzvKYOPWzgDbsmwg8t9VWe19QJffFRQsPOiPBDW21q+Wee19SJtBzlDbsiwg8t9yTPa6pM7v7D
        G3XCvMKPp/0wTVet6F3Ac5sarr4ByCv8+OSHadvw+67luU0NGm7IG7RdhB+6ZFN5d/HcpkakxTO8QZtF
        +KFrGi138dymhvHl27xBW0X4oYvSPB2e29QwyvuQN2ijCD90VePLD3huU8No+Slv0DYRfui4R3huU8P2
        PQDzCv+Bn2xtvbTzDlhAX3j0O60fbh1q7TDXt+5deVmsZiw0uz0DIy3HEhq0wrzCD+3x4E+/33pxx+rW
        ltu+GqsfWzRajvHcpkJwVc/f8MZsEeGHs/HAT7e2dv3zYKyObDHo6ZnH89sxpi76eEM2+KOHdewCQzgT
        94zYud8irdnJ89sxNNeYN1R06S7OLyqEs9HGbwLNWv81PL8dE9a8b/GGiuyW269o/6bjFxTC2Ug/B2x7
        JtCoi3/k+e0YozzFGyqyLz62OnYxIZyLVEu8vopsqCrDPL8dE/qV1byhokqvcw6+PBK7kBDORfoWYNMr
        QuOLW3l+O8YocSdvqKjSO11+ESHsxMfCJbE6K6qhFmt5fjvGps1A9owMxy4ghJ1Ig4V4nRVV43t38/x2
        jNFiE2+oqNLoLn4BIexEqileZ0XVqMq9PL8dgxsALLPP/0vJbwA2/QT4IX4CwJTdXfqfAHgICEssHgLi
        NSAsqROvAf8uVmdFNZPXgM2a8HlDRfYFDASCKUm1xOuryGYzEMiyocD33/bV9p2bX0wIZyOt5bD5tq/E
        6qvIZjMU2MLJQDs3LotdUAhno42TgRrDlat5fjtm/U29l/KGbBDTgeFcpQFlvJ6ssCYu5vntGCwIAssi
        fe1/4t4bY3Vki5ksCEJgSTDosvTMiB742fab/0wzWxKMwKKgcxOLghZXGjVKg3zoPb9Nr/qmMdNFQY8m
        NGiVz26rxwLaDbEsOOyGRokMlwV3ZmMQ3ASgmxqd5cYgTm0NhpsAdM8wy63B3NscFDcB6JbZbg7q5Pbg
        uAlAd6RJezy3qWH8/sW8QRfETQC6YsPvu5bnNjWCwep5vEFXzOsVIbXL+wLhXF21oncBz22qGCVGeaOu
        iG8C0HJP8rymTqTEXxIadkbcBKCtNrX4M89r6hhV+Tlv2DVxE4A2arTcz/OaOk0ttvCGXRQ3AWibtHAv
        z2vqmFrl67xhV8VNANpkpm8AThMMyvm8YZfF2wFog0aJFmWT5zUTjJKHeQdcFt8EYNE1Wn7Cc5oZRovX
        eQdcFzcBWGTp4TzPaWbQxgO8A2UQNwFYVEMt1/GcZgatOcY7UBZxE4CFdOXARTynmRJpcTzWiZKImwAs
        mMd4PjMnUuI3CR0pjXg7AIuiUeI9ns/MCX2vyTtSNvFNABZBo2XA85k5G2/uvYB3pIziJgDzdp0/cCHP
        Z1egd4+8M2UUNwGYl0bLj3kuu4bxved5h8oqbgIwD42SP+K57BoNv3ID71CZxYNB2G1plS6ey64SWb5Z
        SNrmdRPY+5Af6wt0W+OL7DYBmSkNJX/BO1Z287oJPL5xWawv0F27Mv//bBh/YBnvGMznJvDLlx5sbVq1
        KNYX6KaNureE5zEXaD8y3jmYz01gzwh+CpTE7o/+m4rQ936W0EGYw03gnRfva0W6GusHdM3KyzyHuWGG
        e6+LdxCetts3ga1rr4z1Abpls9Z/Dc9hrtCupLyT8DO7eRPYuXFprH3olN1b/GOmhEr+IKGj8Ay7dRN4
        avPyWNvQHY0WIzx/uTO5a9A47yz8vN0YMfjkpm/G2oXOOB4MLTyX568QGOUdTOgwZGb9TeCRYHGsTeiI
        Sh7guSsMGBMwc7O8Cdy3+sux9qAbmppYynNXKCItD/FOw2SzuAns370h1g50RZHfzL+ZEimxPt5xOJVp
        PxPYYa6PtQHdsKm8u3jeCkfQ0zOPRinxzsOpTeubAD79nfYYZYvnrZCEWjyWcABwGju9CfzHvvtbW+64
        IvZ3oTNu5zkrLKtW9C6ItBxLOAg4jTSllwd7Jr774y2tke9dFft70BWrp4JB+UWes0ITqere+IHAs0lT
        emlWHw/5VNLXfnzyO64Su3m+Cg8NVqA7V+xg4FmlKb00q48m9vDAnxl8PPArg9VT9I2a58sKjK4+HT8g
        OHOr7Yk9NLafhvfSCD8a5IP3/OXRaLmL58oaAr3oC0aJUX5QEMIZOWrdb3+O8cXOhAODEJ5F44tHeZ6s
        IxiU8zEuAMJZqqr/R9nhebISo+Wa2AFCCKfUKHEnz5HVGF/8Nz9ICGGi/8XzYz2N4crVCQcKIWQWbrmv
        tDC+fJsfLITwM0Mt3+C5cYY1y/vPN0qc5AcNIWw7mttOv90C04UhTNaK6b5pEGn5Pj94CMtsqMTveU6c
        xdRFn8FsQQhPOxYM9Xs8J05DSxsnnAgIS2ejLh7k+SgFRos/8ZMBYalU4o88F6UhWjlwET35jJ0UCEth
        9ZTxK5fwXJSKqC5Wxk8MhO4b+pXVPA+lxGjxOj85EDruqzwHpYXWDYi0PJpwkiB0TtpINxhaeA7PQakJ
        amIAS4jBEjgW1uTlvP7BxN6CKuGEQeiMxhe38roHZxBqbw8/aRC6oXiG1ztIAEOFoXOWaahvp9BCiJGW
        n8ROIoR2esTapb3zguYLRFqeSDiZEFqj0fLE+pt6L+X1DWZAqLyvYdIQtNgxZ1f36RZGy3rCiYWw8Iaq
        MszrGcwBWiiBn1wIi6zRMuB1DDrAaLGJn2QIi2joVx/g9QtSoKnkNn6yISyStBMWr1uQIjSYgp90CIug
        Ud5TvF5BBkR170l+8iHMUxrByusUZAiWFINF0YlNPG3E+NWIXwwIu2nDl5t5XYIuQq9b+EWBsBsaXd3A
        6xHkAA24wIhB2C2NEuO0lB2vQ5Ajk8OGMXcAZqw42fD7ruX1BwoArbBqlDwcv2gQdq7R8tNAef287kCB
        oGmXtNY6v3gQdqQSv8eUXoswWu6KXUQI52JN7uP1BSwgVPIWmpIZu6AQzkCjxCmajcrrClgEbbqI1YXg
        HDwSDPVdxusJWAitwW603J9wkSGMWxdv0l4VvI6A5TRrwjdKnIxdcAgnHDXKW8XrBjhEdEv/3+ItAeQa
        5X1Y+o06y0R7MpHCA8KySyNIm8rbyusDlAC640da/o4XBSyH9KmPgT2gJ1JiPf3+4wUC3dQoMUrrTPI6
        ACVmnT9wYVPJt3ixQLc0Wr6xZnn/+fz6A9CG1nGnr4a8cKDdGiU+oglj/HoDkIjR4vZIy2O8kKBdGl8c
        p594/PoCcFbaA4h8uQPPB+yTfufTUl3BoJzPrysAs4JGhUVabqei4oUGi2b1VKSqezFzD6ROMLTwXCou
        TDAqohR8sRvBB5kzuX35djwjKITHaOo33Zz5dQIgc2htOHrCnFCYMFuPRkqYoKdnHr8mAHQd4w8sM8o7
        GGk5nlCsMB3HIyUPmJpYys8/AIWAfoM2tdgSaXkooYDh3Pwrfc3HAB5gFWa497pQy1ciLY4nFDWc3mOR
        rrxMA7P4eQXAOhp+5QZalARLl09t+zVrXbzZqHtL+PkDwBmowI3ynsPPhPbY/I8jJZ41fv9ifp4AcJ6N
        N/deQE+zjfZ+XZLXiseMEu/Rlm74TQ8AI6qJi43v3W18+RptcmKU4AGyRup76FcON5T8Be2jF60cuIgf
        LwDgLIQ1eTl9S6D16SMt/xBpWcSHimPt8RB18SYNkqJnHhiHD0BG0OtGestAC1tEde9JmudufPkBLWc9
        cYMQKQ5Xbv8tuukcMVp+0G5Ly13UNu2Th+G3ABQU+klBIW3W5bdJmuYcarGWpsjSeIX2mAUl1tM/o//v
        9L9H/w39t/zvAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICi8P9t/jlzBuUcDgAAAABJRU5ErkJggg==
</value>
  </data>
</root>