<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBoxSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ABxjaOj/AW3+OXOeN0/PAAAAAElFTkSuQmCC
</value>
  </data>
</root>